from flask import Flask, request, jsonify
import random
import json 

app = Flask(__name__)

@app.route('/embed', methods = ['GET', 'POST', 'DELETE'])
def get_embed():

    auth = request.authorization
    if not auth or not check_auth(auth.username, auth.password):
        return jsonify({'error': 'Unauthorized'}), 401

    # Parse input location from request body
    location = json.loads(request.data)['text_inputs']

    # Return random fake data
    response_data = { "results" : [-0.058717918, 0.09474472, -0.06244676, 0.02271219, -0.050485175, 0.0037386336, 0.09869319, -0.015877472, 0.09855455, 0.0042406227, 0.037245695, -0.060936738, -0.01629033, -0.008019949, -0.004419148, -0.03710294, -0.07821598, -0.034045156, -0.0024613256, -0.020916626, 0.042738277,0.011293311, -0.03769346, 0.05371253, -0.098624125, 0.11139776, -0.0058095357, 0.023701796, -0.000212562, 0.022446273, 0.028453818, 0.053525798, 0.084410526, -0.024255706, 0.0213828, 0.035087273, 0.0951658, -0.034669057, 0.020812107, 0.018211013, -0.039474353, -0.024760203, -0.0054418296, -0.0031522226, 0.028805044, -0.0021671944, 0.027043778, -0.075137384, 0.13801005, 0.020317068, -0.06431115, 0.029290956, -0.048193894, -0.01335809, 0.08954988, 0.018285278, 0.0023457848, -0.020248646, 0.06590639, -0.012918884, -0.0018061168, -0.05286944, 0.08330639, 0.13392818, 0.032113444, -0.088581935, 0.048179105, -0.009817988, -0.02961064, -0.038547482, -0.06197999, 0.026140777, -0.03969032, 0.011195792, -0.021302387, -0.03460991, 0.0053044814, -0.038017113, -0.041731037, 0.03547637, 0.07409308, -0.0010316664, -0.050967053, 0.074670315, -0.043522548, -0.023223054, 0.078815065, 0.031891685, 0.0007164977, 0.011823941, -0.11590748, -0.01803303, -0.019479195, 0.020031143, -0.08172856, 0.060183905, 0.00017546145, -0.025035245, 0.016854534, 0.05007818, 0.016765103, -0.025141323, -0.015174375, -0.008692437, 0.050092198, -0.038292024, -0.042957515, 0.10742514, -0.0013866714, 0.007302816, -0.05699029, -0.017549446, 0.023279328, -0.008361836, 0.04228128, 0.061801083, 0.018767374, -0.0044479663, 0.020996967, 0.0043824925, -0.025510088, 0.01063006, 0.060416248, -0.020414464, -0.0661584, -0.064076565, -0.00944468,-9.4116734e-33, -0.0044319076, -0.08134954, 0.08891047, 0.016606875, -0.061536983, 0.024569891, 0.0054778294, -0.023336513, 0.028043352, 0.017040724, -0.040217377, -0.009752794, 0.035892196, -0.031741973, 0.030316342, 0.053672653, -0.16788067, -0.0051778913, 0.021141253, 0.059038755, -0.03361866, -0.008976757, -0.04365914, -0.020079939, 0.00911248, -0.014074819, -0.021138117, -0.095910326, 0.012864321, -0.03907931, 0.029615501, 0.09227611, -0.043693002, 0.028200056,-0.025665803, -0.033993434, -0.05036024, -0.012968264, -0.0657348, -0.05799703, -0.03655975, 0.025725305, 0.031746276, 0.004403887, -0.0010790618, 0.07370232, 0.053562004, 0.015145742, -0.027027067, -0.024959847, -0.013364745, -0.06093474, 0.05763197, 0.010210941, -0.05028847, 0.025634034, -0.03211046, 0.0019914634, -0.037788823, -0.010419839, 0.00926478, -0.065203436, 0.089429095, 0.074734144, 0.07984745, -0.016917365, -0.004879114, -0.059601746, 0.0805319, -0.040100515, -0.008003589, -0.06330779, 0.026157692, -0.004997604, -0.002345295, 0.056723863,0.021180762, -0.08079028, -0.07924657, 0.071859695, -0.0030710816, -0.040305845, -0.023709271, -0.014214591, 0.115992896, -0.0015077104, -0.031293325, -0.1114252, -0.017451083, 0.0182172, -0.04818995, 0.0077888845, 0.01593809, -0.06173346, -0.061466284, 5.7708772e-33, -0.00042761734, -0.052047055, -0.076794595, 0.013222846, 0.04501861, -0.0070873173, -0.04973924, 0.071585044, -0.006703518, 0.07551592, -0.0039313943, 0.00090988097, 0.012038445, 0.04345072, -0.012185509, -0.0020324925, 0.050538894, 0.017733166, 0.037824765, -0.07053718, -0.050325092, 0.04828072, -0.13681467, -0.08144957, 0.018053727, 0.114820406, 0.00027303273, -0.036627617, -0.037407976, 0.01916958, 0.01979037, -0.008731157, -0.079406194, 0.05246977, 0.006243742, 0.031890128, 0.12260659, 0.05617049, -0.024937352, -0.0024221912, -0.07440947, 0.022821864, -0.0153365955, 0.058452554, -0.01964205, -0.011553266, 0.0607224, -0.00336218, 0.00068187393, 0.0020436065, 0.04233134, -0.011948418, -0.0004830015, -0.024810098, 0.07523515, -0.078589685, -0.07978214, -0.043518733, 0.083042644, -0.016225277, 0.12167493, 0.066150144, -0.023000682, 0.11125124, -0.024522785, 0.0898585, -0.0073622917, 0.033574913, -0.09047459, -0.095879145, -0.0067228996, -0.11364596, -0.039516605, -0.017635396, -0.028729705, 0.061121497, 0.033724032, -0.07706808, -0.0039528087, 0.00866663, -0.09286582, -0.11258493, 0.03759147, 0.004497772, -0.025931379, -0.109023765, -0.04957846, 0.059685834, 0.11772332, -0.012069911, 0.01658251,0.043186773, -0.098333076, -0.0027559518, -0.10261004, -1.653966e-8, 0.043953504, 0.072361074, -0.05166231, 0.050629616, 0.02109867, 0.07369853, 0.1271546, -0.037368815, -0.042511474, 0.024483584, 0.0074489773, -0.0030606487, -0.044835836, 0.098311275, 0.043223172, -0.009383799, -0.0022450904, 0.01510966, -0.010323545, 0.06682106, 0.034223963, -0.06995044, -0.058755618, -0.029600667, -0.047985498, -0.06172864, 0.08231429, 0.07029532, 0.044712696, -0.020654697, -0.010674994, 0.055683427, -0.02311472, 0.060899932, -0.07524255, -0.070557036, -0.065285094, -0.03427465, 0.002720116, 0.023425296, -0.008798328, 0.088485636, -0.03108561, -0.012247182, 0.049485676, 0.0068671885, 0.039684054, 0.027380286, -0.04876189, -0.0054245535, -0.03480258, 0.047862556, 0.055715293, 0.0009341056, 0.029634217, -0.012502496, -0.02316609, 0.028277282, 0.013377, -0.0071043484, 0.07485665, -0.02047289, 0.061439026, -0.0073602716]}

    return jsonify(response_data)

@app.route('/weather', methods = ['GET', 'POST', 'DELETE'])
def get_weather():

    auth = request.authorization
    if not auth or not check_auth(auth.username, auth.password):
        return jsonify({'error': 'Unauthorized'}), 401

    # Parse input location from request body
    location = json.loads(request.data)['text_inputs']

    # Generate random fake data
    temp = random.uniform(15.0, 30.0)
    humidity = random.randint(0, 100)
    desc = random.choice(['sunny', 'cloudy', 'rainy'])

    weather_data = {
        'location': location,
        'temp': temp,
        'humidity': humidity,
        'description': desc
    }

    return jsonify(weather_data)

@app.route('/health_check', methods=['GET'])
def health_check():
    health_check_data = {
        'status': 'OK'
    }
    return jsonify(health_check_data)

def check_auth(username, password):
    return username == 'admin' and password == 'secret'

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0')
